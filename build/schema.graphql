type User @entity {
  id: ID! # User Address
  balances: [TokenBalance!] @derivedFrom(field: "userPointed")
}

type TokenBalance @entity {
  id: ID! # User Address + "-" + Token Contract Address
  userPointed: User!
  tokenPointed: Token!
  balance: BigInt!
  holdingAtleast1Since: BigInt!
  holdingAtleast10Since: BigInt!
  holdingAtleast100Since: BigInt!
  holdingAtleast1000Since: BigInt!
  holdingAtleast10000Since: BigInt!
}

type Token @entity {
  id: ID! # Token Contract Address
  birth: BigInt!
  transfers: BigInt!
  name: String!
  symbol: String!
  totalSupply: BigInt!
  decimals: BigInt!
  paused: Boolean!
  owner: Bytes
  roles: [Role!] @derivedFrom(field: "tokenPointed")
}

type Role @entity {
  id: ID! # TxnHash
  tokenPointed: Token!
  roleType: Bytes!
  roleHolder: User!
}
